Билет 1
Вопрос №1: Обязанности администратора баз данных. 
Администратор базы данных – лицо, отвечающее за выработку требований к базе данных, её проектирование, реализацию, эффективное использование и сопровождение, включая управление учётными записями пользователей БД и защиту от несанкционированного доступа. Не менее важной функцией администратора БД является поддержка целостности базы данных.
Основные задачи администратора базы данных:
- проектирование базы данных;
- оптимизация производительности базы данных;
- обеспечение и контроль доступа к базе данных;
- обеспечение безопасности в базе данных;
- резервирование и восстановление базы данных;
- обеспечение целостности баз данных;
- обеспечение перехода на новую версию СУБД.
Вопрос № 2: Требования безопасности к серверам баз данных. 
Серверы баз данных должны удовлетворять следующим требованиям:
– масштабируемость — отсутствие существенного снижения скорости выполнения пользовательских запросов при пропорциональном росте количества запросов и аппаратных ресурсов, используемых сервером баз данных; 
– доступность — возможность всегда выполнить запрос; 
– надежность — минимальная вероятность сбоев, наличие средств восстановления данных после сбоев, инструментов резервного копирования и дублирования данных; 
– управляемость — простота администрирования, наличие средств автоматического конфигурирования; 
– наличие средств защиты данных от потери и несанкционированного доступа; 
– поддержка доступа к данным с помощью веб-служб; 
– поддержка стандартных механизмов доступа к данным (таких как ODBC, JDBC, OLE DB, ADO.NET).
Практическое задание: Разработать схему Базы данных "Колледж" 
 
Билет 2
Вопрос №1: Основные функции утилит администратора баз данных. 
1.	Создание, изменение и удаление баз данных: утилиты позволяют создавать новые базы данных, изменять их структуру и характеристики, а также удалять их при необходимости.
2.	Управление пользователями и правами доступа: утилиты предоставляют возможность добавления, удаления и изменения учетных записей пользователей, а также определения их прав доступа к объектам базы данных.
3.	Восстановление и резервное копирование данных: утилиты обеспечивают создание резервных копий данных и возможность восстановления из них в случае сбоев или потери информации.
4.	Мониторинг производительности и оптимизация работы: утилиты помогают отслеживать и анализировать производительность баз данных, определять и устранять узкие места, а также оптимизировать запросы пользователей.
5.	Настройка и управление параметрами сервера баз данных: утилита предоставляет возможность настройки параметров сервера, таких как параметры безопасности, памяти, сети и т.д.
6.	Управление задачами и заданиями: утилиты позволяют автоматизировать выполнение рутинных задач, таких как регулярное резервное копирование, обслуживание индексов и выполнение запланированных операций.
7.	Анализ и оптимизация запросов: утилиты предоставляют инструменты для анализа и оптимизации сложных SQL-запросов, что позволяет улучшить производительность приложений и снизить нагрузку на сервер.

Вопрос № 2: Законодательство Российской Федерации в области защит информации. 
1.	149-ФЗ «Об информации, информационных технологиях и о защите информации» — устанавливает основные права и обязанности, касающиеся информации и информационной безопасности.
2.	152-ФЗ «О персональных данных»— описывает правила работы с персональными данными.
3.	98-ФЗ «О коммерческой тайне» — определяет, что относится к коммерческой тайне компаний.
4.	63-ФЗ «Об электронной подписи» — дает определение электронной подписи и описывает, как и когда ее можно применять, какой юридической силой она обладает.
5.	187-ФЗ «О безопасности критической информационной инфраструктуры РФ» — описывает правила защиты IT-инфраструктуры на предприятиях, работающих в сферах, критически важных для государства. К таким сферам относится здравоохранение, наука, оборона, связь, транспорт, энергетика, банки и некоторая промышленность.

 
Билет 3
Вопрос №1: Основные группы методов противодействия угрозам безопасности в корпоративных сетях. Описание и примеры. 
Различают четыре основных группы методов обеспечения информационной безопасности:
1.Организационные
2.Инженерно-технические
3.Технические
4.Программно-аппаратные
Организационные методы - ориентированы на работу с персоналом, рассматривают выбор местоположения и размещения объектов ЗАС (автом. сис-мы), организацию системы физической и пожарной безопасности, осуществление контроля, возложение персональной ответственности за выполнение мер защиты, кадровые вопросы.
Инженерно-технические методы - связаны с построением инженерных сооружений и коммуникаций, учитывающих требования безопасности. Это как правило дорогостоящие решения и они наиболее эффективно реализуются на этапе строительства или реконструкции объекта.
Технические методы - связаны с применением специальных технических средств защиты информации и контроля обстановки; они дают значительный эффект при устранении угроз, связанных с действиями криминогенных элементов по добыванию информации незаконными техническими средствами. Технические методы дают значительный эффект по отношению к техногенным факторам, например резервирование каналов и резервирование архивов данных.
Программно-аппаратные методы - направлены на устранение угроз, непосредственно связанных с процессом обработки и передачи информации. К ним относятся:
·         аппаратные шифраторы сетевого трафика;
·         методика Firewall, реализуемая на базе программно-аппаратных средств;
·         защищенные сетевые криптопротоколы;
·         программно-аппаратные анализаторы сетевого трафика;
·         защищенные сетевые ОС. Схемы баз данных:
Вопрос № 2: Роли пользователей и схемы базы данных. 

o Схема — это именованное пространство, в котором хранятся объекты базы
данных, такие как таблицы, представления, индексы и процедуры.
o Схемы позволяют организовать объекты логически и упростить управление ими.
o Пример: В базе данных “AdventureWorks” может существовать схема “Production”
для таблиц, связанных с производством, и схема “Sales” для данных о продажах.

Владельцы схем:

o Каждая схема имеет владельца.
o Владелец схемы может создавать, изменять и удалять объекты в этой схеме.
o По умолчанию, владельцем схемы является пользователь, который ее создал.
Роли пользователей:
o Роли определяют набор прав доступа к объектам базы данных.
o Примеры ролей: “db_owner” (владелец базы данных), “db_datareader” (только
чтение данных), “db_datawriter” (только запись данных).
o Роли позволяют управлять доступом пользователей к объектам.
Разделение схемы пользователей:
o Пользователи могут быть назначены владельцами схем или иметь доступ к
схемам.
o Это позволяет разделить обязанности между пользователями и обеспечить
безопасность данных.
o Например, один пользователь может управлять схемой “HR”, а другой — схемой
“Finance”.
Встроенные схемы:
o Некоторые базы данных имеют встроенные схемы, такие как “dbo” (по
умолчанию в SQL Server).
o Встроенные схемы содержат системные объекты, такие как системные таблицы и
представления.
 
Вопрос №1: Схемы и объекты схемы данных. Блоки данных, экстенты сегменты.
Схемы:
o Схема представляет собой именованное пространство, в котором хранятся
объекты базы данных.
o В схеме могут содержаться таблицы, представления, индексы и другие объекты.
o Схемы помогают организовать данные логически и упростить управление ими.
Объекты схемы:
o Объекты схемы — это логические структуры, прямо связанные с данными в базе
данных.
o Примеры объектов схемы:
▪ Таблицы: Хранят фактические данные, такие как информация о заказах,
клиентах и продуктах.
▪ Представления: Виртуальные таблицы, которые предоставляют удобный
доступ к данным из нескольких таблиц.
▪ Индексы: Ускоряют поиск данных в таблицах.
▪ Процедуры: Хранят логику обработки данных.

Блоки данных, экстенты и сегменты:
o Блок данных (Data Block): Мельчайший строительный блок базы данных,
состоящий из определенного количества байт на диске.
o Экстенты (Extent): Это два или более последовательных блока данных,
представляющих собой единицу выделения места на диске.
o Сегменты (Segment): Набор экстентов, которые выделены для конкретной
логической структуры, например, для таблицы или индекса.

Сегменты объединяют экстенты, а экстенты — блоки данных, образуя иерархию хранения
данных в базе данных
Вопрос № 2: Резервное копирование. Цели. Методы.
Резервное копирование информации чаще всего преследует две цели:
Сохранить данные для максимально быстрого восстановления (disaster recovery), если с ИТ-системой компании произошла авария, её атаковал вирус и т.д.
Создать долговременный архив сведений о деятельности компании, к которому можно обратиться при необходимости получить данные за прошедшие периоды.
Существуют разные технологии резервного копирования, которые отличаются затратами средств и времени:
Полное резервное копирование — выбранные данные копируются целиком.
Инкрементное копирование — записываются только те данные, которые были изменены со времени прошлого бэкапа.
Дифференциальное резервное копирование — копируются только изменения, сделанные с момента последнего полного копирования.
 
Билет 5
Вопрос №1: Политика безопасности: определение и инструменты. 
Политика безопасности – это набор правил, процедур и мер, разработанных организацией для защиты ее информации и ресурсов от угроз и несанкционированного доступа. Она определяет общие принципы и цели, которые должны быть соблюдены всеми сотрудниками и сторонними лицами, имеющими доступ к информации и системам организации.

Инструменты политики безопасности могут включать в себя следующее:
Правила и процедуры: Определение правил и процедур, которые должны быть соблюдаемы для обеспечения безопасности данных, систем и сетей.
Аутентификация и авторизация: Использование механизмов аутентификации, таких как пароли, биометрические данные, двухфакторная аутентификация и управление доступом для обеспечения только необходимого доступа к ресурсам.
Шифрование данных: Применение шифрования для защиты конфиденциальности данных в покое и в движении.
Мониторинг и аудит: Установка систем мониторинга и аудита для отслеживания активности пользователей, обнаружения аномального поведения и реагирования на инциденты безопасности.
Защита от вредоносного программного обеспечения: Использование антивирусных программ, антишпионских программ и других средств защиты от вредоносного программного обеспечения.
Физическая безопасность: Обеспечение безопасности физического доступа к оборудованию и инфраструктуре, например, через видеонаблюдение, ограниченный доступ и биометрическую аутентификацию.
Обучение и осведомленность: Проведение обучения сотрудников по вопросам безопасности, чтобы они понимали угрозы и знали, как правильно реагировать на них.
Бизнес-процессы и контроль доступа: Разработка бизнес-процессов с учетом принципов безопасности и установка соответствующих систем контроля доступа.

Вопрос № 2: Словарь данных: назначение, структура, префиксы. 
Словарь данных (или data dictionary) - это структурированное хранилище информации о
данных, используемых в базе данных или другом информационном системе. Он
описывает схему базы данных, определяет свойства и характеристики данных, и
предоставляет метаданные, необходимые для правильного использования и управления
данными. Вот некоторые ключевые аспекты словаря данных:
Назначение:
Описывает структуру базы данных: таблицы, поля, индексы, связи между таблицами и
другие элементы.
Содержит описание типов данных, диапазонов значений, правил проверки и других
ограничений.
Обеспечивает документацию по данным, что упрощает понимание структуры и
использование базы данных.
Структура:
Таблицы и поля: Описывает все таблицы базы данных и их поля, включая типы данных,
размеры и связи между таблицами.
Ограничения: Включает ограничения целостности данных, такие как первичные ключи,
внешние ключи, уникальные ограничения и правила проверки.
Индексы: Содержит информацию о созданных индексах для ускорения запросов к
данным.
Префиксы:
Префикс данных: Обозначает первые несколько символов или байт в поле, который
может использоваться для категоризации или идентификации типа данных.
Префикс таблицы: Используется для добавления префикса к именам таблиц, чтобы
избежать конфликтов имен в случае использования нескольких баз данных или схем в
одной системе.
Словарь данных играет важную роль в поддержке и управлении базами данных,
обеспечивая структурированную документацию и средства контроля за данными.
 
билет 6
Вопрос №1: Технология установки и настройка сервера PostgreSQL в операционной системе  Windows. 
Установка и настройка сервера PostgreSQL в операционной системе Windows — это
относительно простая процедура, осуществляемая с использованием официального
установщика. Вот пошаговая инструкция:
Установка PostgreSQL на Windows:
Скачивание установщика:
Перейдите на официальный сайт PostgreSQL:
https://www.postgresql.org/download/windows/.

Выберите версию PostgreSQL, подходящую для вашей операционной системы (32-бит
или 64-бит).
Скачайте установщик.
Запуск установщика:
Запустите скачанный установщик PostgreSQL.
Выбор компонентов:
Выберите компоненты для установки. Обычно это включает в себя PostgreSQL Database
Server и утилиты командной строки.
Выбор директории установки:
Укажите директорию, в которую будет установлен PostgreSQL.
Выбор данных пользователя:
Выберите пользователя и пароль для суперпользователя PostgreSQL (по умолчанию -
postgres).
Выбор порта:
Выберите порт, на котором PostgreSQL будет слушать. По умолчанию, это 5432.
Выбор локали:
Выберите локаль (язык, формат даты и времени) для вашей базы данных.
Выбор службы:
Выберите, как служба PostgreSQL будет запускаться: автоматически при старте системы
или вручную.
Установка дополнительных компонентов:
Выберите, установить ли pgAdmin (графический интерфейс администрирования для
PostgreSQL) и Stack Builder (инструмент для установки дополнительных компонентов).
Завершение установки:
Дождитесь завершения установки.
Настройка PostgreSQL на Windows:
Настройка переменной PATH:
Добавьте путь к бинарным файлам PostgreSQL в переменную PATH. Обычно это
C:\Program Files\PostgreSQL\&lt;version&gt;\bin.
Запуск службы:
После установки PostgreSQL служба должна запуститься автоматически. Если это не
произошло, запустите службу вручную. Можно сделать это через службы Windows
(напишите services.msc в командной строке).
Проверка подключения:
Откройте командную строку или PowerShell и выполните команду psql -U postgres.
Введите пароль, который вы установили во время установки.
Если вы видите приглашение PostgreSQL (postgres=#), значит, подключение прошло
успешно.
Настройка pgAdmin:
Если вы установили pgAdmin, запустите его и добавьте новый сервер. Введите имя
сервера, хост (обычно localhost), порт (по умолчанию 5432), имя пользователя и пароль.

Создание базы данных:
Используя pgAdmin или командную строку, создайте базу данных и пользователя по
вашему усмотрению.
Это базовая инструкция, и в зависимости от конкретных требований вашего проекта
могут потребоваться дополнительные настройки. Будьте внимательны к документации
PostgreSQL и рекомендациям по безопасности.
Вопрос № 2: Уровни качества программной̆ продукции: этапы, требования к качеству. 
Качество ПП — это совокупность его черт и характеристик, которые влияют на способность ПП удовлетворять заданные потребности пользователя.
Уровни:
1.	Базовое качество
2.	Функциональное качество
3.	Структурное качество
4.	Процессное качество
5.	Продуктовое качество
6.	Внешнее качество
Процесс сертификации:
1.	Подготовк
2.	Экспертиза
3.	Сертификация
4.	Обновление
 
Билет 7
Вопрос №1: 9. Этапы, наименование и краткая характеристика планирования методов  резервного копирования. 
1.	Анализ требований и оценка рисков: На этом этапе определяются требования к резервному копированию данных, а также анализируются риски, связанные с потерей данных. Это включает оценку важности данных, объема хранимой информации и вероятности возникновения различных угроз.
2.	Выбор методов резервного копирования: На этом этапе определяются наиболее подходящие методы резервного копирования в соответствии с требованиями и оценкой рисков. Это может включать полное, инкрементное, дифференциальное копирование и другие методы, а также комбинацию различных подходов.
3.	Выбор и конфигурация оборудования и программного обеспечения: На этом этапе определяется необходимое оборудование (например, серверы хранения данных, ленточные накопители, облачные хранилища) и программное обеспечение (например, специализированные программы для резервного копирования). Также производится их настройка и конфигурация.
4.	Разработка стратегии резервного копирования: Стратегия резервного копирования определяет, как часто и какие данные будут резервироваться, каким образом будут храниться и как быстро они могут быть восстановлены в случае необходимости.
5.	Разработка процедур и расписания: На этом этапе разрабатываются процедуры выполнения резервного копирования, определяются расписания выполнения резервных копий и восстановления данных, а также механизмы мониторинга и управления резервными копиями.
6.	Тестирование и обучение персонала: Перед полноценным внедрением плана резервного копирования необходимо провести тестирование системы и обучить персонал процедурам резервного копирования и восстановления данных.
7.	Внедрение и поддержка: После завершения разработки и тестирования системы резервного копирования она внедряется в работу и поддерживается в актуальном состоянии, включая регулярное обновление стратегии копирования и мониторинг ее эффективности.

Вопрос № 2: Технология установки и настройка сервера PostgreSQL в операционных системах  Linux. 
Установка и настройка сервера PostgreSQL в операционных системах Linux может быть
выполнена с использованием пакетных менеджеров, что облегчает процесс. Вот шаги
для установки и настройки PostgreSQL на Linux:
Для Debian/Ubuntu:
Обновление пакетов:
bash
Copy code
sudo apt-get update
Установка PostgreSQL:
bash
Copy code
sudo apt-get install postgresql postgresql-contrib
Настройка пользователя postgres:
bash
Copy code
sudo -u postgres psql
Создание пользователя и базы данных:
sql
Copy code
CREATE USER your_username WITH PASSWORD &#39;your_password&#39;;
CREATE DATABASE your_database;
ALTER DATABASE your_database OWNER TO your_username;
Разрешение удаленных подключений (опционально):
Редактируйте файл postgresql.conf и pg_hba.conf для разрешения удаленных
подключений (если это необходимо).
Перезапуск PostgreSQL:
bash
Copy code
sudo service postgresql restart
Для Red Hat/CentOS:
Обновление пакетов:
bash

Copy code
sudo yum update
Установка PostgreSQL:
bash
Copy code
sudo yum install postgresql-server postgresql-contrib
Инициализация кластера и запуск службы:
bash
Copy code
sudo postgresql-setup initdb
sudo systemctl start postgresql
Настройка пользователя postgres:
bash
Copy code
sudo -u postgres psql
Создание пользователя и базы данных:
sql
Copy code
CREATE USER your_username WITH PASSWORD &#39;your_password&#39;;
CREATE DATABASE your_database;
ALTER DATABASE your_database OWNER TO your_username;
Разрешение удаленных подключений (опционально):
Редактируйте файл postgresql.conf и pg_hba.conf для разрешения удаленных
подключений (если это необходимо).
Перезапуск PostgreSQL:
bash
Copy code
sudo systemctl restart postgresql
Общие дополнительные шаги:
Изменение пароля пользователя postgres (если необходимо):
bash
Copy code
sudo -u postgres psql -c &quot;ALTER USER postgres WITH PASSWORD &#39;new_password&#39;;&quot;
Настройка доступа к PostgreSQL извне (опционально):
Редактирование файла pg_hba.conf и postgresql.conf для указания IP-адресов и методов
аутентификации.
Установка клиента psql (опционально):
bash
Copy code
sudo apt-get install postgresql-client # Для Debian/Ubuntu
sudo yum install postgresql # Для Red Hat/CentOS
Эти инструкции предоставляют базовую установку и настройку PostgreSQL. Убедитесь в
том, что вы также выполняете шаги по обеспечению безопасности, такие как настройка
брандмауэра, шифрование соединений и управление пользователями и правами доступа
в зависимости от ваших конкретных требований.
 
билет 8
Вопрос №1: Сертификация соответствия программных средств: требования, этапы.
1.	Определение требований к сертификации: На этом этапе определяются конкретные требования и стандарты, которым должно соответствовать программное обеспечение. Это может включать в себя требования безопасности, качества, совместимости, производительности и т.д.
2.	Подготовка документации: Необходимо подготовить все необходимые документы, включая техническую документацию, спецификации, отчеты о тестировании, результаты анализа рисков и другие документы, подтверждающие соответствие программного обеспечения требованиям.
3.	Тестирование и анализ: Программное обеспечение тестируется и анализируется согласно установленным требованиям. Это может включать функциональное тестирование, тестирование безопасности, тестирование производительности и другие виды тестирования.
4.	Подача заявки на сертификацию: После завершения подготовки документации и тестирования подается заявка на сертификацию в соответствующий орган или учреждение, ответственное за проведение сертификационных процедур.
5.	Проведение аудита и оценка соответствия: Заявленное программное обеспечение проходит аудит со стороны сертификационного органа, в ходе которого проверяется его соответствие установленным требованиям. На основе результатов аудита выносится решение о выдаче или отказе в сертификации.
6.	Выдача сертификата соответствия: В случае успешного прохождения сертификационного процесса программное обеспечение получает сертификат соответствия, который подтверждает его соответствие установленным требованиям и стандартам.
7.	Поддержание сертификата: После получения сертификата соответствия необходимо поддерживать его действительность, что может включать в себя периодическое обновление документации, повторное тестирование и аудиты.

 Вопрос № 2: Понятия и основные характеристики серверов баз данных. 
Сервер баз данных (DBMS Server): Это специализированное программное обеспечение,
предназначенное для управления базами данных (БД). Сервер баз данных обеспечивает
доступ к данным, их хранение, обработку, безопасность и другие функции для
клиентских приложений.
Основные понятия и характеристики серверов баз данных:
Хранение данных:
Определение: Сервер баз данных отвечает за организацию и хранение данных в
структурированной форме.
Характеристики: Эффективное управление хранилищем данных, поддержка различных
типов данных и индексов.
Язык запросов:
Определение: Предоставляет средства для выполнения запросов к данным. SQL
(Structured Query Language) часто используется для этого.
Характеристики: Поддержка языков запросов, оптимизация выполнения запросов.
Транзакции:
Определение: Гарантируют целостность данных в базе при одновременном доступе
нескольких пользователей.
Характеристики: ACID-свойства (Атомарность, Согласованность, Изолированность,
Долговечность).
Безопасность:
Определение: Обеспечивает контроль доступа к данным и защиту от
несанкционированного доступа.
Характеристики: Аутентификация, авторизация, аудит, шифрование данных.
Оптимизация запросов:
Определение: Процесс оптимизации выполнения запросов для повышения
производительности.
Характеристики: Планы выполнения запросов, индексы, статистика.
Резервное копирование и восстановление:

Определение: Гарантирует безопасность данных с помощью регулярного создания
резервных копий и возможности восстановления.
Характеристики: Механизмы создания резервных копий, стратегии восстановления.
Масштабируемость:
Определение: Способность системы масштабироваться для обработки роста объема
данных и запросов.
Характеристики: Вертикальное и горизонтальное масштабирование.
Системы управления версиями данных:
Определение: Возможность отслеживать и управлять изменениями данных с течением
времени.
Характеристики: Журнализация изменений, системы версионирования.
Работа с многопользовательским доступом:
Определение: Поддержка одновременного доступа нескольких пользователей к данным.
Характеристики: Управление транзакциями, изоляция данных.
Контроль целостности:
Определение: Обеспечивает целостность данных, предотвращает нарушения правил и
ограничений.
Характеристики: Ограничения целостности, проверки целостности.
Управление ресурсами:
Определение: Эффективное управление памятью, процессорными ресурсами и сетевым
взаимодействием.
Характеристики: Мониторинг производительности, оптимизация ресурсов.
Серверы баз данных являются критическими компонентами информационных систем и
предоставляют базовую инфраструктуру для работы приложений и хранения данных в
организации.
 
билет 9
Вопрос №1: Транзакции, блокировки и согласованность данных: описание и назначение. 
Транзакции в базах данных представляют собой неделимые последовательности операций,
которые либо выполняются полностью, либо откатываются целиком. Они обеспечивают
целостность данных и гарантируют, что база данных остается в согласованном состоянии.
Вот некоторые ключевые аспекты транзакций:
1. Свойства транзакций (ACID):
o Атомарность (Atomicity): Транзакция либо выполняется полностью, либо не
выполняется вообще.
o Согласованность (Consistency): Транзакция переводит базу данных из одного
целостного состояния в другое.
o Изолированность (Isolation): Транзакции выполняются параллельно, но
изолированно друг от друга.
o Устойчивость (Durability): Результаты успешно завершенных транзакций
сохраняются даже после сбоев.

2. Блокировки:
o Транзакции накладывают блокировки на данные, чтобы обеспечить выполнение
требований ACID.
o Блокировки предотвращают конфликты при одновременном доступе к данным.
3. Уровни изоляции:
o Определяют, как транзакции видят изменения, внесенные другими транзакциями.
o Примеры уровней изоляции: READ COMMITTED, REPEATABLE
READ, SERIALIZABLE.
Вопрос № 2: Процесс мониторинга активности. Результаты мониторинга и блокирование угроз.

Процесс мониторинга активности - это непрерывный процесс отслеживания действий и событий в информационной системе с целью выявления потенциальных угроз безопасности или нарушений. Результаты мониторинга могут включать в себя следующее:
Обнаружение аномалий: Мониторинг активности позволяет выявлять необычное или аномальное поведение пользователей или системы, которое может указывать на возможные угрозы безопасности.
Анализ событий: Полученные данные о действиях и событиях анализируются с целью выявления паттернов, типичных для атак или нарушений безопасности.
Идентификация уязвимостей: Мониторинг активности позволяет идентифицировать уязвимости в системе, которые могут быть использованы злоумышленниками для проведения атак.
Реагирование на инциденты: В случае обнаружения угроз или нарушений безопасности, мониторинг позволяет быстро реагировать на инциденты, принимать меры по их предотвращению или минимизации ущерба.
Блокирование угроз: На основе результатов мониторинга и анализа могут быть приняты меры по блокированию угроз безопасности, такие как блокировка доступа к уязвимым ресурсам, изменение настроек безопасности или отключение подозрительных активностей.
Процесс блокирования угроз может включать в себя следующие шаги:
Изоляция: В случае обнаружения угрозы безопасности, зараженные системы или уязвимые ресурсы могут быть изолированы от сети или других компонентов информационной системы, чтобы предотвратить дальнейшее распространение атаки.
Отключение доступа: Подозрительные аккаунты или устройства могут быть временно отключены или заблокированы, чтобы предотвратить дальнейшие попытки атаки или несанкционированного доступа.
Восстановление: После блокирования угрозы необходимо провести меры по восстановлению безопасности системы, включая устранение уязвимостей, восстановление поврежденных данных и восстановление нормального функционирования системы.
Обучение и осведомленность: Важно обучать сотрудников о мерах безопасности и процедурах реагирования на угрозы, чтобы они могли своевременно обнаруживать и предотвращать атаки.
 
Билет 10
Вопрос №1: Процесс настройки политики безопасности. 
1.	Определение требований к безопасности: На этом этапе определяются требования организации к безопасности информационных ресурсов. Это может включать в себя законодательные требования, стандарты отрасли, требования клиентов и внутренние политики безопасности.
2.	Разработка политики безопасности: На основе определенных требований разрабатывается политика безопасности, которая включает в себя набор правил, процедур и мер безопасности, необходимых для защиты информации и ресурсов организации. Политика безопасности должна быть ясно сформулирована, понятна сотрудникам и утверждена руководством организации.
3.	Разработка мер безопасности: На основе политики безопасности разрабатываются конкретные меры безопасности, которые будут применяться для реализации политики. Это может включать в себя установку антивирусного программного обеспечения, настройку механизмов аутентификации и авторизации, шифрование данных, установку систем мониторинга и другие меры.
4.	Внедрение и настройка мер безопасности: На этом этапе меры безопасности внедряются и настраиваются на информационных системах организации в соответствии с политикой безопасности. Это может включать в себя установку и настройку программного обеспечения, конфигурацию сетевых устройств, настройку доступа к ресурсам и другие действия.
5.	Обучение персонала: Важным этапом является обучение сотрудников организации правилам и процедурам безопасности, а также о том, как правильно применять меры безопасности в своей работе. Это поможет повысить осведомленность сотрудников о безопасности и уменьшить риск возникновения инцидентов.
6.	Мониторинг и анализ: После внедрения мер безопасности необходимо регулярно мониторить и анализировать их эффективность, чтобы выявлять уязвимости, аномалии и потенциальные угрозы. Это позволит своевременно корректировать политику безопасности и меры безопасности для обеспечения надежной защиты информационных ресурсов организации.

Вопрос № 2: Журнал базы данных: структура и назначение файлов журнала, управление  переключениями и контрольными точками. 

1.	Структура и назначение файлов журнала:
•	Журнал базы данных обычно представлен в виде одного или нескольких файлов, в которых записываются изменения данных, выполняемые в процессе транзакций.
•	Основное назначение журнала - сохранение последовательности операций (транзакций) над данными. Это позволяет восстановить базу данных до определенного состояния в случае сбоя.
•	Файлы журнала могут иметь различные форматы, включая последовательный (sequential) и кольцевой (circular), в зависимости от конкретной системы управления базами данных (СУБД).
2.	Управление переключениями (log switching):
•	Переключение журнала происходит, когда текущий журнальный файл заполняется, и СУБД автоматически начинает запись в новый файл.
•	Этот процесс обычно происходит асинхронно и может зависеть от настроек СУБД и конфигурации журнальных файлов.
•	Управление переключениями журнала обеспечивает непрерывность записи изменений в базу данных даже во время переключения файлов.
3.	Контрольные точки (checkpoint):
•	Контрольная точка - это момент времени, когда СУБД записывает все изменения из журнала в основную базу данных и обновляет соответствующие метаданные.
•	Контрольные точки выполняются периодически или при определенных условиях, например, когда размер журнала достигает определенного порога.
•	Цель контрольных точек - уменьшить время восстановления базы данных после сбоя, так как они помогают уменьшить объем данных, которые нужно восстановить из журнала.
