Билет 1
Таблица "Студенты" (Students):

student_id (Идентификатор студента, PRIMARY KEY)
имя (Name)
фамилия (Surname)
дата_рождения (Date_of_Birth)
пол (Gender)
группа (Group_id, FOREIGN KEY)
Таблица "Преподаватели" (Teachers):

teacher_id (Идентификатор преподавателя, PRIMARY KEY)
имя (Name)
фамилия (Surname)
кафедра (Department)
должность (Position)
Таблица "Группы" (Groups):

group_id (Идентификатор группы, PRIMARY KEY)
номер_группы (Group_number)
курс (Course)
специальность (Specialty)
староста (Group_leader_id, FOREIGN KEY)
Таблица "Предметы" (Subjects):

subject_id (Идентификатор предмета, PRIMARY KEY)
название (Title)
кафедра (Department)
преподаватель (Teacher_id, FOREIGN KEY)
Таблица "Оценки" (Grades):

grade_id (Идентификатор оценки, PRIMARY KEY)
student_id (Идентификатор студента, FOREIGN KEY)
subject_id (Идентификатор предмета, FOREIGN KEY)
оценка (Grade)
дата (Date)
Таблица "Расписание занятий" (Schedule):

schedule_id (Идентификатор расписания, PRIMARY KEY)
день_недели (Day_of_week)
время_начала (Start_time)
время_окончания (End_time)
группа (Group_id, FOREIGN KEY)
предмет (Subject_id, FOREIGN KEY)
преподаватель (Teacher_id, FOREIGN KEY)
Таблица "Экзамены" (Exams):

exam_id (Идентификатор экзамена, PRIMARY KEY)
subject_id (Идентификатор предмета, FOREIGN KEY)
дата (Date)
аудитория (Classroom)
преподаватель (Teacher_id, FOREIGN KEY)

Или же SQL запрос:
-- Создание таблицы "Студенты"
CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    дата_рождения DATE,
    пол VARCHAR(10),
    группа INT,
    FOREIGN KEY (группа) REFERENCES Groups(group_id)
);

-- Создание таблицы "Преподаватели"
CREATE TABLE Teachers (
    teacher_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    кафедра VARCHAR(50),
    должность VARCHAR(50)
);

-- Создание таблицы "Группы"
CREATE TABLE Groups (
    group_id INT PRIMARY KEY,
    номер_группы VARCHAR(10),
    курс INT,
    специальность VARCHAR(100),
    староста INT,
    FOREIGN KEY (староста) REFERENCES Students(student_id)
);

-- Создание таблицы "Предметы"
CREATE TABLE Subjects (
    subject_id INT PRIMARY KEY,
    название VARCHAR(100),
    кафедра VARCHAR(50),
    преподаватель INT,
    FOREIGN KEY (преподаватель) REFERENCES Teachers(teacher_id)
);

-- Создание таблицы "Оценки"
CREATE TABLE Grades (
    grade_id INT PRIMARY KEY,
    student_id INT,
    subject_id INT,
    оценка INT,
    дата DATE,
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (subject_id) REFERENCES Subjects(subject_id)
);

-- Создание таблицы "Расписание занятий"
CREATE TABLE Schedule (
    schedule_id INT PRIMARY KEY,
    день_недели VARCHAR(20),
    время_начала TIME,
    время_окончания TIME,
    группа INT,
    предмет INT,
    преподаватель INT,
    FOREIGN KEY (группа) REFERENCES Groups(group_id),
    FOREIGN KEY (предмет) REFERENCES Subjects(subject_id),
    FOREIGN KEY (преподаватель) REFERENCES Teachers(teacher_id)
);

-- Создание таблицы "Экзамены"
CREATE TABLE Exams (
    exam_id INT PRIMARY KEY,
    subject_id INT,
    дата DATE,
    аудитория VARCHAR(20),
    преподаватель INT,
    FOREIGN KEY (subject_id) REFERENCES Subjects(subject_id),
    FOREIGN KEY (преподаватель) REFERENCES Teachers(teacher_id)
);

Билет 4 (файл excel в качесве примера можно найти в этом же репозитории)
Students (Студенты):
student_id (Идентификатор студента, целое число) - PRIMARY KEY
имя (Имя студента, строка до 50 символов)
фамилия (Фамилия студента, строка до 50 символов)
дата_рождения (Дата рождения студента, тип DATE)
пол (Пол студента, строка до 10 символов)
группа (Идентификатор группы, целое число) - FOREIGN KEY
Groups (Группы):
group_id (Идентификатор группы, целое число) - PRIMARY KEY
номер_группы (Номер группы, строка до 10 символов)
курс (Курс, целое число)
специальность (Специальность группы, строка до 100 символов)
староста (Идентификатор старосты группы, целое число) - FOREIGN KEY
Teachers (Преподаватели):
teacher_id (Идентификатор преподавателя, целое число) - PRIMARY KEY
имя (Имя преподавателя, строка до 50 символов)
фамилия (Фамилия преподавателя, строка до 50 символов)
кафедра (Кафедра преподавателя, строка до 50 символов)
должность (Должность преподавателя, строка до 50 символов)
Subjects (Предметы):
subject_id (Идентификатор предмета, целое число) - PRIMARY KEY
название (Название предмета, строка до 100 символов)
кафедра (Кафедра предмета, строка до 50 символов)
преподаватель (Идентификатор преподавателя, целое число) - FOREIGN KEY
Grades (Оценки):
grade_id (Идентификатор оценки, целое число) - PRIMARY KEY
student_id (Идентификатор студента, целое число) - FOREIGN KEY
subject_id (Идентификатор предмета, целое число) - FOREIGN KEY
оценка (Оценка студента по предмету, целое число)
дата (Дата выставления оценки, тип DATE)

Билет 6
Таблица "Цветы" (Flowers):

flower_id (Идентификатор цветка, целое число) - PRIMARY KEY
название (Название цветка, строка)
цена (Цена цветка, десятичное число)
описание (Описание цветка, текст)
количество (Количество доступных цветков, целое число)
Таблица "Поставщики" (Suppliers):

supplier_id (Идентификатор поставщика, целое число) - PRIMARY KEY
название_компании (Название компании-поставщика, строка)
контактное_лицо (Имя контактного лица, строка)
телефон (Номер телефона поставщика, строка)
адрес (Адрес поставщика, строка)
Таблица "Заказы" (Orders):

order_id (Идентификатор заказа, целое число) - PRIMARY KEY
дата (Дата заказа, дата)
статус (Статус заказа, строка: новый, выполнен, отменен и т. д.)
общая_сумма (Общая сумма заказа, десятичное число)
id_клиента (Идентификатор клиента, целое число) - FOREIGN KEY
Таблица "Сотрудники" (Employees):

employee_id (Идентификатор сотрудника, целое число) - PRIMARY KEY
имя (Имя сотрудника, строка)
фамилия (Фамилия сотрудника, строка)
должность (Должность сотрудника, строка)
телефон (Номер телефона сотрудника, строка)
зарплата (Зарплата сотрудника, десятичное число)
Таблица "Клиенты" (Customers):

customer_id (Идентификатор клиента, целое число) - PRIMARY KEY
имя (Имя клиента, строка)
фамилия (Фамилия клиента, строка)
телефон (Номер телефона клиента, строка)
email (Адрес электронной почты клиента, строка)
адрес (Адрес клиента, строка)
Таблица "Заказанные цветы" (Ordered_Flowers):

order_id (Идентификатор заказа, целое число) - FOREIGN KEY
flower_id (Идентификатор цветка, целое число) - FOREIGN KEY
количество (Количество заказанных цветков, целое число)
Таблица "Поставки" (Deliveries):

delivery_id (Идентификатор поставки, целое число) - PRIMARY KEY
supplier_id (Идентификатор поставщика, целое число) - FOREIGN KEY
flower_id (Идентификатор цветка, целое число) - FOREIGN KEY
количество (Количество поставленных цветков, целое число)
дата (Дата поставки, дата)

Или же SQL запрос:
-- Создание таблицы "Цветы"
CREATE TABLE Цветы (
    flower_id INT PRIMARY KEY,
    название VARCHAR(100),
    цена DECIMAL(10, 2),
    описание TEXT,
    количество INT
);

-- Создание таблицы "Поставщики"
CREATE TABLE Поставщики (
    supplier_id INT PRIMARY KEY,
    название_компании VARCHAR(100),
    контактное_лицо VARCHAR(100),
    телефон VARCHAR(20),
    адрес VARCHAR(255)
);

-- Создание таблицы "Заказы"
CREATE TABLE Заказы (
    order_id INT PRIMARY KEY,
    дата DATE,
    статус VARCHAR(50),
    общая_сумма DECIMAL(10, 2),
    id_клиента INT,
    FOREIGN KEY (id_клиента) REFERENCES Клиенты(customer_id)
);

-- Создание таблицы "Сотрудники"
CREATE TABLE Сотрудники (
    employee_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    должность VARCHAR(100),
    телефон VARCHAR(20),
    зарплата DECIMAL(10, 2)
);

-- Создание таблицы "Клиенты"
CREATE TABLE Клиенты (
    customer_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    телефон VARCHAR(20),
    email VARCHAR(100),
    адрес VARCHAR(255)
);

-- Создание таблицы "Заказанные цветы"
CREATE TABLE Заказанные_цветы (
    order_id INT,
    flower_id INT,
    количество INT,
    FOREIGN KEY (order_id) REFERENCES Заказы(order_id),
    FOREIGN KEY (flower_id) REFERENCES Цветы(flower_id)
);

-- Создание таблицы "Поставки"
CREATE TABLE Поставки (
    delivery_id INT PRIMARY KEY,
    supplier_id INT,
    flower_id INT,
    количество INT,
    дата DATE,
    FOREIGN KEY (supplier_id) REFERENCES Поставщики(supplier_id),
    FOREIGN KEY (flower_id) REFERENCES Цветы(flower_id)
);

Билет 8 (Excel для примера в этом же репозитории)
Таблица "Пользователи" (Users):

user_id (Идентификатор пользователя, целое число) - PRIMARY KEY
имя (Имя пользователя, строка)
фамилия (Фамилия пользователя, строка)
email (Адрес электронной почты пользователя, строка)
пароль (Хэшированный пароль пользователя, строка)
телефон (Номер телефона пользователя, строка)
Таблица "Товары" (Products):

product_id (Идентификатор товара, целое число) - PRIMARY KEY
название (Название товара, строка)
описание (Описание товара, текст)
цена (Цена товара, десятичное число)
количество (Количество товара на складе, целое число)
Таблица "Категории товаров" (Categories):

category_id (Идентификатор категории, целое число) - PRIMARY KEY
название (Название категории, строка)
Таблица "Заказы" (Orders):

order_id (Идентификатор заказа, целое число) - PRIMARY KEY
user_id (Идентификатор пользователя, целое число) - FOREIGN KEY
дата (Дата заказа, дата)
статус (Статус заказа, строка: новый, выполнен, отменен и т. д.)
общая_сумма (Общая сумма заказа, десятичное число)
Таблица "Детали заказа" (Order_Details):

order_detail_id (Идентификатор детали заказа, целое число) - PRIMARY KEY
order_id (Идентификатор заказа, целое число) - FOREIGN KEY
product_id (Идентификатор товара, целое число) - FOREIGN KEY
количество (Количество товара в заказе, целое число)
Таблица "Адреса доставки" (Shipping_Addresses):

address_id (Идентификатор адреса, целое число) - PRIMARY KEY
user_id (Идентификатор пользователя, целое число) - FOREIGN KEY
адрес (Адрес доставки, строка)
Таблица "Оплаты" (Payments):

payment_id (Идентификатор оплаты, целое число) - PRIMARY KEY
order_id (Идентификатор заказа, целое число) - FOREIGN KEY
сумма (Сумма оплаты, десятичное число)
дата (Дата оплаты, дата)
способ_оплаты (Способ оплаты, строка: кредитная карта, наличные и т. д.)

Билет 11
Таблица "Студенты" (Students):

student_id (Идентификатор студента, целое число) - PRIMARY KEY
имя (Имя студента, строка)
фамилия (Фамилия студента, строка)
дата_рождения (Дата рождения студента, тип DATE)
пол (Пол студента, строка: мужской, женский)
группа (Номер группы студента, строка)
курс (Курс студента, целое число)
Таблица "Группы" (Groups):

group_id (Идентификатор группы, целое число) - PRIMARY KEY
номер_группы (Номер группы, строка)
специальность (Специальность группы, строка)
Таблица "Преподаватели" (Teachers):

teacher_id (Идентификатор преподавателя, целое число) - PRIMARY KEY
имя (Имя преподавателя, строка)
фамилия (Фамилия преподавателя, строка)
кафедра (Кафедра преподавателя, строка)
Таблица "Предметы" (Subjects):

subject_id (Идентификатор предмета, целое число) - PRIMARY KEY
название (Название предмета, строка)
кафедра (Кафедра предмета, строка)
Таблица "Оценки" (Grades):

grade_id (Идентификатор оценки, целое число) - PRIMARY KEY
student_id (Идентификатор студента, целое число) - FOREIGN KEY
subject_id (Идентификатор предмета, целое число) - FOREIGN KEY
оценка (Оценка студента по предмету, целое число)
дата (Дата выставления оценки, тип DATE)
Таблица "Расписание занятий" (Schedule):

schedule_id (Идентификатор расписания, целое число) - PRIMARY KEY
день_недели (День недели занятия, строка: понедельник, вторник и т. д.)
время_начала (Время начала занятия, тип TIME)
время_окончания (Время окончания занятия, тип TIME)
группа (Идентификатор группы, целое число) - FOREIGN KEY
предмет (Идентификатор предмета, целое число) - FOREIGN KEY
преподаватель (Идентификатор преподавателя, целое число) - FOREIGN KEY

Или же SQL запрос:
-- Создание таблицы "Студенты"
CREATE TABLE Студенты (
    student_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    дата_рождения DATE,
    пол VARCHAR(10),
    группа INT,
    курс INT,
    FOREIGN KEY (группа) REFERENCES Группы(group_id)
);

-- Создание таблицы "Группы"
CREATE TABLE Группы (
    group_id INT PRIMARY KEY,
    номер_группы VARCHAR(10),
    специальность VARCHAR(100)
);

-- Создание таблицы "Преподаватели"
CREATE TABLE Преподаватели (
    teacher_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    кафедра VARCHAR(50)
);

-- Создание таблицы "Предметы"
CREATE TABLE Предметы (
    subject_id INT PRIMARY KEY,
    название VARCHAR(100),
    кафедра VARCHAR(50)
);

-- Создание таблицы "Оценки"
CREATE TABLE Оценки (
    grade_id INT PRIMARY KEY,
    student_id INT,
    subject_id INT,
    оценка INT,
    дата DATE,
    FOREIGN KEY (student_id) REFERENCES Студенты(student_id),
    FOREIGN KEY (subject_id) REFERENCES Предметы(subject_id)
);

-- Создание таблицы "Расписание занятий"
CREATE TABLE Расписание_занятий (
    schedule_id INT PRIMARY KEY,
    день_недели VARCHAR(20),
    время_начала TIME,
    время_окончания TIME,
    группа INT,
    предмет INT,
    преподаватель INT,
    FOREIGN KEY (группа) REFERENCES Группы(group_id),
    FOREIGN KEY (предмет) REFERENCES Предметы(subject_id),
    FOREIGN KEY (преподаватель) REFERENCES Преподаватели(teacher_id)
);

Билет 13
-- Создание таблицы "Клиенты"
CREATE TABLE Клиенты (
    id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    email VARCHAR(100),
    телефон VARCHAR(20),
    адрес VARCHAR(255)
);

-- Создание таблицы "Продукты"
CREATE TABLE Продукты (
    id INT PRIMARY KEY,
    название VARCHAR(100),
    описание TEXT,
    цена DECIMAL(10, 2),
    количество INT,
    категория VARCHAR(50)
);

-- Создание таблицы "Заказы"
CREATE TABLE Заказы (
    id INT PRIMARY KEY,
    id_клиента INT,
    дата DATETIME,
    статус VARCHAR(50),
    общая_сумма DECIMAL(10, 2),
    FOREIGN KEY (id_клиента) REFERENCES Клиенты(id)
);

-- Создание таблицы "Сотрудники"
CREATE TABLE Сотрудники (
    id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    должность VARCHAR(100),
    телефон VARCHAR(20),
    зарплата DECIMAL(10, 2)
);

Билет 15 (Используется с БД от прошлого билета)
-- Создание хранимой процедуры для добавления нового клиента
CREATE PROCEDURE Добавить_Клиента (
    @имя VARCHAR(50),
    @фамилия VARCHAR(50),
    @email VARCHAR(100),
    @телефон VARCHAR(20),
    @адрес VARCHAR(255)
)
AS
BEGIN
    INSERT INTO Клиенты (имя, фамилия, email, телефон, адрес)
    VALUES (@имя, @фамилия, @email, @телефон, @адрес);
END;

-- Создание хранимой процедуры для добавления нового продукта
CREATE PROCEDURE Добавить_Продукт (
    @название VARCHAR(100),
    @описание TEXT,
    @цена DECIMAL(10, 2),
    @количество INT,
    @категория VARCHAR(50)
)
AS
BEGIN
    INSERT INTO Продукты (название, описание, цена, количество, категория)
    VALUES (@название, @описание, @цена, @количество, @категория);
END;

-- Создание хранимой процедуры для создания нового заказа
CREATE PROCEDURE Создать_Заказ (
    @id_клиента INT,
    @дата DATETIME,
    @статус VARCHAR(50),
    @общая_сумма DECIMAL(10, 2)
)
AS
BEGIN
    INSERT INTO Заказы (id_клиента, дата, статус, общая_сумма)
    VALUES (@id_клиента, @дата, @статус, @общая_сумма);
END;

-- Создание хранимой процедуры для добавления нового сотрудника
CREATE PROCEDURE Добавить_Сотрудника (
    @имя VARCHAR(50),
    @фамилия VARCHAR(50),
    @должность VARCHAR(100),
    @телефон VARCHAR(20),
    @зарплата DECIMAL(10, 2)
)
AS
BEGIN
    INSERT INTO Сотрудники (имя, фамилия, должность, телефон, зарплата)
    VALUES (@имя, @фамилия, @должность, @телефон, @зарплата);
END;

Билет 17 (Excel в качестве примера в этом же репозитории)
Таблица "Абитуриенты" (Applicants):

applicant_id (Идентификатор абитуриента, целое число) - PRIMARY KEY
Фамилия (Фамилия абитуриента, строка)
Имя (Имя абитуриента, строка)
Отчество (Отчество абитуриента, строка)
Дата_рождения (Дата рождения абитуриента, тип DATE)
Адрес (Адрес проживания абитуриента, строка)
Телефон (Номер телефона абитуриента, строка)
Email (Адрес электронной почты абитуриента, строка)
Таблица "Сдача экзаменов" (Exams):

exam_id (Идентификатор экзамена, целое число) - PRIMARY KEY
Название_экзамена (Название экзамена, строка)
Дата (Дата проведения экзамена, тип DATE)
Оценка (Оценка, полученная на экзамене, целое число)
applicant_id (Идентификатор абитуриента, целое число) - FOREIGN KEY
Таблица "Предметы" (Subjects):

subject_id (Идентификатор предмета, целое число) - PRIMARY KEY
Название_предмета (Название предмета, строка)
Кафедра (Кафедра, проводящая предмет, строка)
Таблица "Результаты поступления" (AdmissionResults):

result_id (Идентификатор результата, целое число) - PRIMARY KEY
applicant_id (Идентификатор абитуриента, целое число) - FOREIGN KEY
Оценка_за_экзамены (Общая оценка за сдачу экзаменов, целое число)
Решение_о_поступлении (Решение о поступлении (принят/не принят), строка)
Комментарии (Дополнительные комментарии к результатам, текст)
Таблица "Факультеты" (Faculties):

faculty_id (Идентификатор факультета, целое число) - PRIMARY KEY
Название_факультета (Название факультета, строка)
Декан (ФИО декана факультета, строка)

Билет 20
Таблица "Пользователи" (Users):

user_id (Идентификатор пользователя, целое число) - PRIMARY KEY
имя (Имя пользователя, строка)
фамилия (Фамилия пользователя, строка)
email (Адрес электронной почты пользователя, строка)
пароль (Хэшированный пароль пользователя, строка)
телефон (Номер телефона пользователя, строка)
Таблица "Товары" (Products):

product_id (Идентификатор товара, целое число) - PRIMARY KEY
название (Название товара, строка)
описание (Описание товара, текст)
цена (Цена товара, десятичное число)
количество (Количество товара на складе, целое число)
Таблица "Категории товаров" (Categories):

category_id (Идентификатор категории, целое число) - PRIMARY KEY
название (Название категории, строка)
Таблица "Заказы" (Orders):

order_id (Идентификатор заказа, целое число) - PRIMARY KEY
user_id (Идентификатор пользователя, целое число) - FOREIGN KEY
дата (Дата заказа, дата)
статус (Статус заказа, строка: новый, выполнен, отменен и т. д.)
общая_сумма (Общая сумма заказа, десятичное число)
Таблица "Детали заказа" (Order_Details):

order_detail_id (Идентификатор детали заказа, целое число) - PRIMARY KEY
order_id (Идентификатор заказа, целое число) - FOREIGN KEY
product_id (Идентификатор товара, целое число) - FOREIGN KEY
количество (Количество товара в заказе, целое число)
Таблица "Адреса доставки" (Shipping_Addresses):

address_id (Идентификатор адреса, целое число) - PRIMARY KEY
user_id (Идентификатор пользователя, целое число) - FOREIGN KEY
адрес (Адрес доставки, строка)
Таблица "Оплаты" (Payments):

payment_id (Идентификатор оплаты, целое число) - PRIMARY KEY
order_id (Идентификатор заказа, целое число) - FOREIGN KEY
сумма (Сумма оплаты, десятичное число)
дата (Дата оплаты, дата)
способ_оплаты (Способ оплаты, строка: кредитная карта, наличные и т. д.)

Или же SQL запрос:
-- Создание таблицы "Пользователи"
CREATE TABLE Пользователи (
    user_id INT PRIMARY KEY,
    имя VARCHAR(50),
    фамилия VARCHAR(50),
    email VARCHAR(100),
    пароль VARCHAR(255),
    телефон VARCHAR(20)
);

-- Создание таблицы "Товары"
CREATE TABLE Товары (
    product_id INT PRIMARY KEY,
    название VARCHAR(100),
    описание TEXT,
    цена DECIMAL(10, 2),
    количество INT
);

-- Создание таблицы "Категории товаров"
CREATE TABLE Категории_товаров (
    category_id INT PRIMARY KEY,
    название VARCHAR(100)
);

-- Создание таблицы "Заказы"
CREATE TABLE Заказы (
    order_id INT PRIMARY KEY,
    user_id INT,
    дата DATETIME,
    статус VARCHAR(50),
    общая_сумма DECIMAL(10, 2),
    FOREIGN KEY (user_id) REFERENCES Пользователи(user_id)
);

-- Создание таблицы "Детали заказа"
CREATE TABLE Детали_заказа (
    order_detail_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    количество INT,
    FOREIGN KEY (order_id) REFERENCES Заказы(order_id),
    FOREIGN KEY (product_id) REFERENCES Товары(product_id)
);

-- Создание таблицы "Адреса доставки"
CREATE TABLE Адреса_доставки (
    address_id INT PRIMARY KEY,
    user_id INT,
    адрес VARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES Пользователи(user_id)
);

-- Создание таблицы "Оплаты"
CREATE TABLE Оплаты (
    payment_id INT PRIMARY KEY,
    order_id INT,
    сумма DECIMAL(10, 2),
    дата DATETIME,
    способ_оплаты VARCHAR(100),
    FOREIGN KEY (order_id) REFERENCES Заказы(order_id)
);

Билет 22 (Excel в качестве примера в этом же репозитории)
Таблица "Цветы" (Flowers):

flower_id (Идентификатор цветка, целое число) - PRIMARY KEY
название (Название цветка, строка)
описание (Описание цветка, текст)
цена (Цена цветка, десятичное число)
количество (Количество цветков на складе, целое число)
категория (Категория цветка, строка)
Таблица "Заказы" (Orders):

order_id (Идентификатор заказа, целое число) - PRIMARY KEY
имя_клиента (Имя клиента, строка)
телефон (Номер телефона клиента, строка)
адрес_доставки (Адрес доставки заказа, строка)
дата_заказа (Дата заказа, дата)
статус (Статус заказа, строка: новый, выполнен, отменен и т. д.)
Таблица "Детали заказа" (Order_Details):

detail_id (Идентификатор детали заказа, целое число) - PRIMARY KEY
order_id (Идентификатор заказа, целое число) - FOREIGN KEY
flower_id (Идентификатор цветка, целое число) - FOREIGN KEY
количество (Количество цветков в заказе, целое число)
Таблица "Клиенты" (Clients):

client_id (Идентификатор клиента, целое число) - PRIMARY KEY
имя (Имя клиента, строка)
фамилия (Фамилия клиента, строка)
email (Адрес электронной почты клиента, строка)
телефон (Номер телефона клиента, строка)
Таблица "Оплаты" (Payments):

payment_id (Идентификатор оплаты, целое число) - PRIMARY KEY
order_id (Идентификатор заказа, целое число) - FOREIGN KEY
сумма (Сумма оплаты, десятичное число)
дата (Дата оплаты, дата)
способ_оплаты (Способ оплаты, строка: кредитная карта, наличные и т. д.)

Билет 24 (Excel в качестве примера в этом же репозитории)
Таблица "Студенты" (Students):

student_id (Идентификатор студента, целое число) - PRIMARY KEY
имя (Имя студента, строка)
фамилия (Фамилия студента, строка)
дата_рождения (Дата рождения студента, тип DATE)
пол (Пол студента, строка: мужской, женский)
адрес (Адрес проживания студента, строка)
телефон (Номер телефона студента, строка)
Таблица "Преподаватели" (Teachers):

teacher_id (Идентификатор преподавателя, целое число) - PRIMARY KEY
имя (Имя преподавателя, строка)
фамилия (Фамилия преподавателя, строка)
дата_рождения (Дата рождения преподавателя, тип DATE)
кафедра (Кафедра, на которой работает преподаватель, строка)
Таблица "Группы" (Groups):

group_id (Идентификатор группы, целое число) - PRIMARY KEY
номер_группы (Номер группы, строка)
специальность (Специальность группы, строка)
курс (Курс, на котором обучается группа, целое число)
Таблица "Предметы" (Subjects):

subject_id (Идентификатор предмета, целое число) - PRIMARY KEY
название (Название предмета, строка)
кафедра (Кафедра, на которой ведется предмет, строка)
Таблица "Оценки" (Grades):

grade_id (Идентификатор оценки, целое число) - PRIMARY KEY
student_id (Идентификатор студента, целое число) - FOREIGN KEY
subject_id (Идентификатор предмета, целое число) - FOREIGN KEY
оценка (Оценка студента по предмету, целое число)
дата (Дата выставления оценки, тип DATE)
Таблица "Расписание занятий" (Schedule):

schedule_id (Идентификатор расписания, целое число) - PRIMARY KEY
день_недели (День недели занятия, строка: понедельник, вторник и т. д.)
время_начала (Время начала занятия, тип TIME)
время_окончания (Время окончания занятия, тип TIME)
group_id (Идентификатор группы, целое число) - FOREIGN KEY
subject_id (Идентификатор предмета, целое число) - FOREIGN KEY
teacher_id (Идентификатор преподавателя, целое число) - FOREIGN KEY

Билет 25
Таблица "Абитуриенты" (Applicants):

applicant_id (Идентификатор абитуриента, целое число) - PRIMARY KEY
Фамилия (Фамилия абитуриента, строка)
Имя (Имя абитуриента, строка)
Отчество (Отчество абитуриента, строка)
Дата_рождения (Дата рождения абитуриента, тип DATE)
Адрес (Адрес проживания абитуриента, строка)
Телефон (Номер телефона абитуриента, строка)
Email (Адрес электронной почты абитуриента, строка)
Таблица "Сдача экзаменов" (Exams):

exam_id (Идентификатор экзамена, целое число) - PRIMARY KEY
Название_экзамена (Название экзамена, строка)
Дата (Дата проведения экзамена, тип DATE)
Оценка (Оценка, полученная на экзамене, целое число)
applicant_id (Идентификатор абитуриента, целое число) - FOREIGN KEY
Таблица "Предметы" (Subjects):

subject_id (Идентификатор предмета, целое число) - PRIMARY KEY
Название_предмета (Название предмета, строка)
Кафедра (Кафедра, проводящая предмет, строка)
Таблица "Результаты поступления" (AdmissionResults):

result_id (Идентификатор результата, целое число) - PRIMARY KEY
applicant_id (Идентификатор абитуриента, целое число) - FOREIGN KEY
Оценка_за_экзамены (Общая оценка за сдачу экзаменов, целое число)
Решение_о_поступлении (Решение о поступлении (принят/не принят), строка)
Комментарии (Дополнительные комментарии к результатам, текст)
Таблица "Факультеты" (Faculties):

faculty_id (Идентификатор факультета, целое число) - PRIMARY KEY
Название_факультета (Название факультета, строка)
Декан (ФИО декана факультета, строка)

Или же SQL запрос:
-- Создание таблицы "Абитуриенты"
CREATE TABLE Абитуриенты (
    applicant_id INT PRIMARY KEY,
    Фамилия VARCHAR(50),
    Имя VARCHAR(50),
    Отчество VARCHAR(50),
    Дата_рождения DATE,
    Адрес VARCHAR(255),
    Телефон VARCHAR(20),
    Email VARCHAR(100)
);

-- Создание таблицы "Сдача экзаменов"
CREATE TABLE Сдача_экзаменов (
    exam_id INT PRIMARY KEY,
    Название_экзамена VARCHAR(100),
    Дата DATE,
    Оценка INT,
    applicant_id INT,
    FOREIGN KEY (applicant_id) REFERENCES Абитуриенты(applicant_id)
);

-- Создание таблицы "Предметы"
CREATE TABLE Предметы (
    subject_id INT PRIMARY KEY,
    Название_предмета VARCHAR(100),
    Кафедра VARCHAR(100)
);

-- Создание таблицы "Результаты поступления"
CREATE TABLE Результаты_поступления (
    result_id INT PRIMARY KEY,
    applicant_id INT,
    Оценка_за_экзамены INT,
    Решение_о_поступлении VARCHAR(50),
    Комментарии TEXT,
    FOREIGN KEY (applicant_id) REFERENCES Абитуриенты(applicant_id)
);

-- Создание таблицы "Факультеты"
CREATE TABLE Факультеты (
    faculty_id INT PRIMARY KEY,
    Название_факультета VARCHAR(100),
    Декан VARCHAR(100)
);
